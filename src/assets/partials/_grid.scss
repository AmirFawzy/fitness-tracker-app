.container {
  width: 100%;
  padding-right: ($grid-gutter-width / 2);
  padding-left: ($grid-gutter-width / 2);
  margin-right: auto;
  margin-left: auto;
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-right: ($grid-gutter-width / -2);
  margin-left: ($grid-gutter-width / -2);
}

@media #{$small-and-up} {
  .container {
    width: 90%;
  }
}

@media #{$medium-and-up} {
  .container {
    width: 85%;
  }
}

@media #{$large-and-up} {
  .container {
    width: 75%;
  }
}

@media #{$extra-small-and-down} {
  .container {
    padding-right: 0;
    padding-left: 0;
  }
  .row {
    margin-left: 0;
    margin-right: 0;
  }
}

.section {
  padding-top: 1rem;
  padding-bottom: 1rem;
  &.no-pad {
    padding: 0;
  }
  &.no-pad-bot {
    padding-bottom: 0;
  }
  &.no-pad-top {
    padding-top: 0;
  }
}

// Mixins to eliminate code repitition
@mixin grid-classes($size, $i, $perc) {
  &.offset-#{$size}#{$i} {
    margin-left: $perc;
  }
  &.pull-#{$size}#{$i} {
    right: $perc;
  }
  &.push-#{$size}#{$i} {
    left: $perc;
  }
}

.row {

  &:after {
    content: "";
    display: table;
    clear: both;
  }

  .col {
    position: relative;
    width: 100%;
    min-height: 1px; // Prevent columns from collapsing when empty
    padding-right: ($grid-gutter-width / 2);
    padding-left: ($grid-gutter-width / 2);
    box-sizing: border-box;

    &[class*="push-"],
    &[class*="pull-"] {
      position: relative;
    }

    $i: 1;
    @while $i <=$num-cols {
      $perc: unquote((100 / ($num-cols / $i)) + "%");
      &.xs#{$i} {
        flex: 0 0 $perc;
        min-width: $perc;
      }
      $i: $i+1;
    }

    $i: 1;
    @while $i <=$num-cols {
      $perc: unquote((100 / ($num-cols / $i)) + "%");
      @include grid-classes("xs", $i, $perc);
      $i: $i + 1;
    }

    @media #{$small-and-up} {

      $i: 1;
      @while $i <=$num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.s#{$i} {
          flex: 0 0 $perc;
          min-width: $perc;
        }
        $i: $i+1
      }

      $i: 1;
      @while $i <=$num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("s", $i, $perc);
        $i: $i + 1;
      }
    }

    @media #{$medium-and-up} {

      $i: 1;
      @while $i <=$num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.m#{$i} {
          flex: 0 0 $perc;
          min-width: $perc;
        }
        $i: $i+1
      }

      $i: 1;
      @while $i <=$num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("m", $i, $perc);
        $i: $i + 1;
      }
    }

    @media #{$large-and-up} {

      $i: 1;
      @while $i <=$num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.l#{$i} {
          flex: 0 0 $perc;
          min-width: $perc;
        }
        $i: $i+1;
      }

      $i: 1;
      @while $i <=$num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("l", $i, $perc);
        $i: $i + 1;
      }
    }

    @media #{$extra-large-and-up} {

      $i: 1;
      @while $i <=$num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.xl#{$i} {
          flex: 0 0 $perc;
          min-width: $perc;
        }
        $i: $i+1;
      }

      $i: 1;
      @while $i <=$num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("xl", $i, $perc);
        $i: $i + 1;
      }
    }
  }
}
